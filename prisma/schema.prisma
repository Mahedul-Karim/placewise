// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName String
  email String @unique
  avatar String
  isAdmin Boolean? @default(false)
  isVendor Boolean? @default(false)
  phoneNumber Int?
  Bio String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
}

model Tours{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  images TourImage[]
  placeCovered Int
  startPoint String
  endPoint String
  duration String
  ratings Int @default(0)
  description String
  price Int
  itineary Itineray[]
  reviews Reviews[]
  capacity Int
  creatorId String @db.ObjectId
  category String
}

model TourImage{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  tourName String @unique
  publicId String
  url String

  tour Tours @relation(fields: [tourName],references: [name],onDelete:Cascade)
}

model Itineray{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  image String
  title String
  description String
  tourName String 

  tour Tours @relation(fields: [tourName],references: [name],onDelete:Cascade )
}
model Reviews{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  createdAt DateTime @default(now())
  rating Int @default(1)
  description String
  tourName String

  tour Tours @relation(fields: [tourName],references: [name],onDelete:Cascade) 
}